version: "3.9"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: chaykov-saas-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-chaykov_saas}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/data-service/express/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-chaykov_saas}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chaykov-network

  # Backend API (Express)
  backend:
    build:
      context: .
      dockerfile: apps/data-service/express/Dockerfile
    container_name: chaykov-saas-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${BACKEND_PORT:-3001}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-chaykov_saas}
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    networks:
      - chaykov-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'node -e "require(''http'').get(''http://localhost:3001/health'', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (React + Vite)
  frontend:
    build:
      context: .
      dockerfile: apps/user-application/trv1/Dockerfile
      args:
        VITE_API_URL: /api
    container_name: chaykov-saas-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3000:80"
    networks:
      - chaykov-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  chaykov-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
